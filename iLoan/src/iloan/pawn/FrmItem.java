/************************************************************************/
/* iLoan - Quick Loan Management System                                 */
/* ===========================                                          */
/*                                                                      */
/* Copyright (c) 2011 by Maurice Rogers                                 */
/* http://www.mauricerogers.com                                         */
/************************************************************************/

/*
 * FrmItem.java
 *
 * Created on Dec 28, 2010, 9:13:00 AM
 */
package iloan.pawn;

import java.io.File;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import org.jdesktop.application.Action;

/**
 *
 * @author mrogers
 */
public class FrmItem extends javax.swing.JDialog
{

    ArrayList<File> attachments = new ArrayList<File>();
    JTable itemTable = null;
    boolean editing = false;
    int selectedItem = 0;

    /** Creates new form FrmItem */
    public FrmItem(java.awt.Frame parent, boolean modal, JTable item_Table)
    {
        super(parent, modal);
        initComponents();
        reloadAttchmentList();
        this.itemTable = item_Table;
    }

    public FrmItem(java.awt.Frame parent, boolean modal, JTable item_Table, boolean edit, int selectedIndex)
    {
        super(parent, modal);
        initComponents();
        reloadAttchmentList();
        this.itemTable = item_Table;
        editing = edit;
        selectedItem = selectedIndex;
        loadValues();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmdCancel = new javax.swing.JButton();
        cmdAccept = new javax.swing.JButton();
        itemTabbedPane = new javax.swing.JTabbedPane();
        generalPanel = new javax.swing.JPanel();
        lblType = new javax.swing.JLabel();
        cmbType = new javax.swing.JComboBox();
        lblValue = new javax.swing.JLabel();
        txtValue = new javax.swing.JTextField();
        detailsPanel = new javax.swing.JPanel();
        lblDescription = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescription = new javax.swing.JTextArea();
        attachmentsPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        attachmentList = new javax.swing.JList();
        lblAttachments = new javax.swing.JLabel();
        cmddd = new javax.swing.JButton();
        cmdRemove = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(iloan.ILoanApp.class).getContext().getResourceMap(FrmItem.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setModal(true);
        setName("Form"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(iloan.ILoanApp.class).getContext().getActionMap(FrmItem.class, this);
        cmdCancel.setAction(actionMap.get("cancel")); // NOI18N
        cmdCancel.setIcon(resourceMap.getIcon("cmdCancel.icon")); // NOI18N
        cmdCancel.setText(resourceMap.getString("cmdCancel.text")); // NOI18N
        cmdCancel.setName("cmdCancel"); // NOI18N

        cmdAccept.setAction(actionMap.get("acceptInfo")); // NOI18N
        cmdAccept.setIcon(resourceMap.getIcon("cmdAccept.icon")); // NOI18N
        cmdAccept.setText(resourceMap.getString("cmdAccept.text")); // NOI18N
        cmdAccept.setName("cmdAccept"); // NOI18N

        itemTabbedPane.setName("itemTabbedPane"); // NOI18N

        generalPanel.setName("generalPanel"); // NOI18N

        lblType.setText(resourceMap.getString("lblType.text")); // NOI18N
        lblType.setName("lblType"); // NOI18N

        cmbType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item1" }));
        cmbType.setName("cmbType"); // NOI18N

        lblValue.setText(resourceMap.getString("lblValue.text")); // NOI18N
        lblValue.setName("lblValue"); // NOI18N

        txtValue.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtValue.setText(resourceMap.getString("txtValue.text")); // NOI18N
        txtValue.setName("txtValue"); // NOI18N

        javax.swing.GroupLayout generalPanelLayout = new javax.swing.GroupLayout(generalPanel);
        generalPanel.setLayout(generalPanelLayout);
        generalPanelLayout.setHorizontalGroup(
            generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(generalPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblType)
                    .addComponent(lblValue))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cmbType, 0, 342, Short.MAX_VALUE)
                    .addComponent(txtValue, javax.swing.GroupLayout.DEFAULT_SIZE, 342, Short.MAX_VALUE))
                .addContainerGap())
        );
        generalPanelLayout.setVerticalGroup(
            generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(generalPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblType))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblValue))
                .addContainerGap(147, Short.MAX_VALUE))
        );

        itemTabbedPane.addTab(resourceMap.getString("generalPanel.TabConstraints.tabTitle"), resourceMap.getIcon("generalPanel.TabConstraints.tabIcon"), generalPanel); // NOI18N

        detailsPanel.setName("detailsPanel"); // NOI18N

        lblDescription.setText(resourceMap.getString("lblDescription.text")); // NOI18N
        lblDescription.setName("lblDescription"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        txtDescription.setColumns(20);
        txtDescription.setRows(5);
        txtDescription.setName("txtDescription"); // NOI18N
        jScrollPane1.setViewportView(txtDescription);

        javax.swing.GroupLayout detailsPanelLayout = new javax.swing.GroupLayout(detailsPanel);
        detailsPanel.setLayout(detailsPanelLayout);
        detailsPanelLayout.setHorizontalGroup(
            detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblDescription)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE)
                .addContainerGap())
        );
        detailsPanelLayout.setVerticalGroup(
            detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                    .addComponent(lblDescription))
                .addContainerGap())
        );

        itemTabbedPane.addTab(resourceMap.getString("detailsPanel.TabConstraints.tabTitle"), resourceMap.getIcon("detailsPanel.TabConstraints.tabIcon"), detailsPanel); // NOI18N

        attachmentsPanel.setName("attachmentsPanel"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        attachmentList.setName("attachmentList"); // NOI18N
        jScrollPane2.setViewportView(attachmentList);

        lblAttachments.setText(resourceMap.getString("lblAttachments.text")); // NOI18N
        lblAttachments.setName("lblAttachments"); // NOI18N

        cmddd.setAction(actionMap.get("addItem")); // NOI18N
        cmddd.setIcon(resourceMap.getIcon("cmddd.icon")); // NOI18N
        cmddd.setText(resourceMap.getString("cmddd.text")); // NOI18N
        cmddd.setName("cmddd"); // NOI18N

        cmdRemove.setAction(actionMap.get("removeItem")); // NOI18N
        cmdRemove.setIcon(resourceMap.getIcon("cmdRemove.icon")); // NOI18N
        cmdRemove.setText(resourceMap.getString("cmdRemove.text")); // NOI18N
        cmdRemove.setName("cmdRemove"); // NOI18N

        javax.swing.GroupLayout attachmentsPanelLayout = new javax.swing.GroupLayout(attachmentsPanel);
        attachmentsPanel.setLayout(attachmentsPanelLayout);
        attachmentsPanelLayout.setHorizontalGroup(
            attachmentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(attachmentsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(attachmentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(attachmentsPanelLayout.createSequentialGroup()
                        .addComponent(lblAttachments)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, attachmentsPanelLayout.createSequentialGroup()
                        .addComponent(cmddd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmdRemove)))
                .addContainerGap())
        );
        attachmentsPanelLayout.setVerticalGroup(
            attachmentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(attachmentsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(attachmentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAttachments)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(attachmentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmdRemove)
                    .addComponent(cmddd))
                .addContainerGap())
        );

        itemTabbedPane.addTab(resourceMap.getString("attachmentsPanel.TabConstraints.tabTitle"), resourceMap.getIcon("attachmentsPanel.TabConstraints.tabIcon"), attachmentsPanel); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(itemTabbedPane, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cmdAccept)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmdCancel)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(itemTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmdCancel)
                    .addComponent(cmdAccept))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loadValues()
    {
        String type = Pawn.getItemTypes().get(selectedItem);
        String description = Pawn.getItemDescriptions().get(selectedItem);
        double value = Pawn.getItemValues().get(selectedItem);
        attachments = (ArrayList<File>) Pawn.getItemAttachments().get(selectedItem);

        cmbType.setSelectedItem(type);
        txtDescription.setText(description);
        txtValue.setText(String.valueOf(value));
        reloadAttchmentList();
    }

    private void reloadAttchmentList()
    {
        attachmentList.removeAll();
        ArrayList<String> fileArray = new ArrayList<String>();

        for (File file : attachments)
        {
            fileArray.add(file.getName());
        }

        attachmentList.setListData(fileArray.toArray());
    }

    @Action
    public void cancel()
    {
        int response = JOptionPane.showConfirmDialog(rootPane, "Are you sure you want to cancel?", "iLoan", JOptionPane.YES_NO_OPTION);
        if (response == JOptionPane.YES_OPTION)
        {
            this.dispose();
        }
    }

    @Action
    public void addItem()
    {
        File selectedFile = null;

        JFileChooser fc = new JFileChooser();
        int response = fc.showOpenDialog(this);
        if (response == JFileChooser.APPROVE_OPTION)
        {
            selectedFile = fc.getSelectedFile();
        }

        attachments.add(selectedFile);
        reloadAttchmentList();
    }

    @Action
    public void removeItem()
    {
        int selectedAttachment = attachmentList.getSelectedIndex();
        if (selectedAttachment != -1)
        {
            attachments.remove(selectedAttachment);
            reloadAttchmentList();
        }
        else
        {
            String message = "Kindly select an item before trying to remove it.";
            JOptionPane.showMessageDialog(rootPane, message, "iLoan", JOptionPane.WARNING_MESSAGE);
        }
    }

    @Action
    public void acceptInfo()
    {
        if (editing)
        {
            try
            {
                String type = cmbType.getSelectedItem().toString();
                double value = Double.valueOf(txtValue.getText().trim());
                String description = txtDescription.getText().trim();

                Pawn.removeItem(selectedItem);
                Pawn.addPawnItem(selectedItem, type, value, description, attachments);
                Pawn.loadPawnItems(itemTable);
                this.dispose();
            }
            catch (NumberFormatException numberFormatException)
            {
                String message = "Kindly ensure that proper values were entered in the fields.";
                JOptionPane.showMessageDialog(rootPane, message, "iLoan", JOptionPane.WARNING_MESSAGE);
            }
        }
        else
        {
            try
            {
                String type = cmbType.getSelectedItem().toString();
                double value = Double.valueOf(txtValue.getText().trim());
                String description = txtDescription.getText().trim();

                Pawn.addPawnItem(type, value, description, attachments);
                Pawn.loadPawnItems(itemTable);
                this.dispose();
            }
            catch (NumberFormatException numberFormatException)
            {
                String message = "Kindly ensure that proper values were entered in the fields.";
                JOptionPane.showMessageDialog(rootPane, message, "iLoan", JOptionPane.WARNING_MESSAGE);
            }
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList attachmentList;
    private javax.swing.JPanel attachmentsPanel;
    private javax.swing.JComboBox cmbType;
    private javax.swing.JButton cmdAccept;
    private javax.swing.JButton cmdCancel;
    private javax.swing.JButton cmdRemove;
    private javax.swing.JButton cmddd;
    private javax.swing.JPanel detailsPanel;
    private javax.swing.JPanel generalPanel;
    private javax.swing.JTabbedPane itemTabbedPane;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblAttachments;
    private javax.swing.JLabel lblDescription;
    private javax.swing.JLabel lblType;
    private javax.swing.JLabel lblValue;
    private javax.swing.JTextArea txtDescription;
    private javax.swing.JTextField txtValue;
    // End of variables declaration//GEN-END:variables
}
